// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication31.DAl.Database;

namespace WebApplication31.Migrations
{
    [DbContext(typeof(DbContainer))]
    partial class DbContainerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication31.DAl.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("additionalInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("buildingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("floor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("governate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("landmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regionCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("approach")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("countryOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dateValidity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exportPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("grossWeight")
                        .HasColumnType("float");

                    b.Property<double>("netWeight")
                        .HasColumnType("float");

                    b.Property<string>("packaging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<double>("rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Rootid")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTimeIssued")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deliveryId")
                        .HasColumnType("int");

                    b.Property<string>("documentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("documentTypeVersion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("extraDiscountAmount")
                        .HasColumnType("float");

                    b.Property<string>("internalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("issuerid")
                        .HasColumnType("int");

                    b.Property<double>("netAmount")
                        .HasColumnType("float");

                    b.Property<int?>("paymentid")
                        .HasColumnType("int");

                    b.Property<string>("proformaInvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("purchaseOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("purchaseOrderReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("receiverid")
                        .HasColumnType("int");

                    b.Property<string>("salesOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("salesOrderReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taxpayerActivityCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("totalAmount")
                        .HasColumnType("float");

                    b.Property<double>("totalDiscountAmount")
                        .HasColumnType("float");

                    b.Property<double>("totalItemsDiscountAmount")
                        .HasColumnType("float");

                    b.Property<double>("totalSalesAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Rootid");

                    b.HasIndex("deliveryId");

                    b.HasIndex("issuerid");

                    b.HasIndex("paymentid");

                    b.HasIndex("receiverid");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.InvoiceLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("discountId")
                        .HasColumnType("int");

                    b.Property<string>("internalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("itemsDiscount")
                        .HasColumnType("float");

                    b.Property<double>("netTotal")
                        .HasColumnType("float");

                    b.Property<double>("quantity")
                        .HasColumnType("float");

                    b.Property<double>("salesTotal")
                        .HasColumnType("float");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.Property<double>("totalTaxableFees")
                        .HasColumnType("float");

                    b.Property<string>("unitType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("unitValueid")
                        .HasColumnType("int");

                    b.Property<double>("valueDifference")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("discountId");

                    b.HasIndex("unitValueid");

                    b.ToTable("InvoiceLines");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Issuer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressId");

                    b.ToTable("Issuers");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Payment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bankAccountIBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankAccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("swiftCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("terms")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Receiver", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("addressId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("addressId");

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Root", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("id");

                    b.ToTable("Roots");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Signature", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<string>("signatureType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Signatures");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.TaxTotal", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DocumentId")
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<string>("taxType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DocumentId");

                    b.ToTable("TaxTotals");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.TaxableItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InvoiceLineId")
                        .HasColumnType("int");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<double>("rate")
                        .HasColumnType("float");

                    b.Property<string>("subType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("taxType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("InvoiceLineId");

                    b.ToTable("TaxableItem");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.UnitValue", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("amountEGP")
                        .HasColumnType("float");

                    b.Property<string>("currencySold")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UnitValues");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Document", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.Root", null)
                        .WithMany("documents")
                        .HasForeignKey("Rootid");

                    b.HasOne("WebApplication31.DAl.Entity.Delivery", "delivery")
                        .WithMany()
                        .HasForeignKey("deliveryId");

                    b.HasOne("WebApplication31.DAl.Entity.Issuer", "issuer")
                        .WithMany()
                        .HasForeignKey("issuerid");

                    b.HasOne("WebApplication31.DAl.Entity.Payment", "payment")
                        .WithMany()
                        .HasForeignKey("paymentid");

                    b.HasOne("WebApplication31.DAl.Entity.Receiver", "receiver")
                        .WithMany()
                        .HasForeignKey("receiverid");

                    b.Navigation("delivery");

                    b.Navigation("issuer");

                    b.Navigation("payment");

                    b.Navigation("receiver");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.InvoiceLine", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.Document", null)
                        .WithMany("invoiceLines")
                        .HasForeignKey("DocumentId");

                    b.HasOne("WebApplication31.DAl.Entity.Discount", "discount")
                        .WithMany()
                        .HasForeignKey("discountId");

                    b.HasOne("WebApplication31.DAl.Entity.UnitValue", "unitValue")
                        .WithMany()
                        .HasForeignKey("unitValueid");

                    b.Navigation("discount");

                    b.Navigation("unitValue");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Issuer", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressId");

                    b.Navigation("address");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Receiver", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressId");

                    b.Navigation("address");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Signature", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.Document", null)
                        .WithMany("signatures")
                        .HasForeignKey("DocumentId");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.TaxTotal", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.Document", null)
                        .WithMany("taxTotals")
                        .HasForeignKey("DocumentId");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.TaxableItem", b =>
                {
                    b.HasOne("WebApplication31.DAl.Entity.InvoiceLine", null)
                        .WithMany("taxableItems")
                        .HasForeignKey("InvoiceLineId");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Document", b =>
                {
                    b.Navigation("invoiceLines");

                    b.Navigation("signatures");

                    b.Navigation("taxTotals");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.InvoiceLine", b =>
                {
                    b.Navigation("taxableItems");
                });

            modelBuilder.Entity("WebApplication31.DAl.Entity.Root", b =>
                {
                    b.Navigation("documents");
                });
#pragma warning restore 612, 618
        }
    }
}
